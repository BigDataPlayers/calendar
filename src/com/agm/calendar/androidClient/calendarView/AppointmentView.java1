package com.agm.calendar.androidClient.calendarView;

import android.view.View;
import android.view.ViewGroup;
import android.widget.*;
import com.agm.calendar.androidClient.R;
import android.content.Context;
import android.support.v4.view.ViewPager;
import android.util.AttributeSet;
import android.view.LayoutInflater;


/**
 * Created with IntelliJ IDEA.
 * User: a09726a
 * Date: 2/5/13
 * Time: 4:34 PM
 * To change this template use File | Settings | File Templates.
 */
public class AppointmentView extends LinearLayout {
    private GridView apptTable ;
    private ListAdapter adapter;

    public AppointmentView(final Context context) {
        this(context, null);
    }

    public AppointmentView(final Context context, final AttributeSet attrs) {
        super(context, attrs);
        String [] slotsDesc = createSlotText();
        apptTable = ((GridView) findViewById(R.id.slot_gridView));
        adapter = new AppointmentsGridAdapter(context, slotsDesc);
        apptTable.setAdapter(adapter);
    }


    class AppointmentsGridAdapter extends BaseAdapter {

        private Context context;
        String [] slotValues ;

        public AppointmentsGridAdapter (Context contxt, String[] mobileValues){
            context = contxt;
            slotValues = mobileValues;
        }

        public int getCount()
        {
            return slotValues.length ;
        }

        public Object getItem(int i){
         return 0;
        }

        public long getItemId(int i) {return 0;}

        public android.view.View getView(int position, View convertView, ViewGroup parent) {
            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

            View gridView;

            if (convertView == null) {

                gridView = inflater.inflate(R.layout.slots, null);

                // set value into textview
                TextView textView = (TextView) gridView
                        .findViewById(R.id.grid_item_label);
                textView.setText(mobileValues[position]);

                // set image based on selected text
                ImageView imageView = (ImageView) gridView
                        .findViewById(R.id.grid_item_image);

                String mobile = mobileValues[position];

                if (mobile.equals("Windows")) {
                    imageView.setImageResource(R.drawable.windows_logo);
                } else if (mobile.equals("iOS")) {
                    imageView.setImageResource(R.drawable.ios_logo);
                } else if (mobile.equals("Blackberry")) {
                    imageView.setImageResource(R.drawable.blackberry_logo);
                } else {
                    imageView.setImageResource(R.drawable.android_logo);
                }

            } else {
                gridView = (View) convertView;
            }

            return gridView;
        }


        public int getItemViewType(int i) {
            return i;
        }

        public boolean isEmpty() {
            return false;
        }

        public boolean areAllItemsEnabled() {return false;}

        public boolean isEnabled(int i) {return false;}
}

    private String[] createSlotText (){
        String [] slots = new String[CalendarConstants.SLOT_COUNT];

    }
}
